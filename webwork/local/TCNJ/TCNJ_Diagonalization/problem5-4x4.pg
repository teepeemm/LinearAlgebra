## DESCRIPTION
## Linear Algebra
## ENDDESCRIPTION

## KEYWORDS('diagonalization' 'matrices')
## Tagged by tda2d

## DBsubject('Linear Algebra')
## DBchapter('Matrices')
## DBsection('Diagonalization')
## Date('')
## Author('')
## Institution('TCNJ')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGgraphmacros.pl",
"PGmatrixmacros.pl",
"PGnumericalmacros.pl",
"PGauxiliaryFunctions.pl",
"PGmorematrixmacros.pl",
);

TEXT(beginproblem());

$s= new Matrix(4,4);
$s11 = non_zero_random(-3,3,2);
$s21 = non_zero_random(-3,3,2);
$s31 = non_zero_random(-3,3,2);
$s41 = non_zero_random(-1,1,2);
$b1 = random(-2,2,4);
$s12 = $b1 * $s11;
$m = random(-1,1,2);
$s22 = $b1 * $s21;
$s32 = $b1 * $s31 + $m;
$s42=$b1*$s41;
$c = random(-1,1,2);
$d = random(-1,1,2);
$n = random(-1,1,2);
$s13 = $c * $s11 + $d * $s12;
$s23 = $c * $s21 + $d * $s22 + $n;
$s33 = $c * $s31 + $d * $s32;
$s43 = $c * $s41 + $d * $s42;
$f = random(-1,1,2);
$g = random(-1,1,2);
$p = random(-1,1,2);
$s14 = $f * $s11 + $g * $s13 + $p;
$s24 = $f * $s21 + $g * $s23;
$s34 = $f * $s31 + $g * $s33;
$s44 = $f * $s41 + $g * $s43;
$det = $s41 * $m * $n * $p;
$s->assign(1,1, $s11 );
$s->assign(1,2, $s12 );
$s->assign(1,3, $s13 );
$s->assign(1,4, $s14 );
$s->assign(2,1, $s21 );
$s->assign(2,2, $s22 );
$s->assign(2,3, $s23 );
$s->assign(2,4, $s24 );
$s->assign(3,1, $s31 );
$s->assign(3,2, $s32 );
$s->assign(3,3, $s33 );
$s->assign(3,4, $s34 );
$s->assign(4,1, $s41 );
$s->assign(4,2, $s42 );
$s->assign(4,3, $s43 );
$s->assign(4,4, $s44 );
$s_lr = $s->decompose_LR();
$s_det = $s_lr->det_LR();
$t = $s_lr->invert_LR();
$e = new Matrix(4,4);
$e->one();
$e->assign(1,1, random(-5,-2,1));
$e->assign(2,2, -1);
$e->assign(3,3, 0);
$e->assign(4,4, 1);
$matrix = $s * $e *$t;
$matrix_lr = $matrix->decompose_LR();
$matrix_det = $matrix_lr->det_LR();

foreach $i (1..4) { 
	foreach $j (1..4) { 
		$m[$i][$j] = $matrix->element($i,$j); 
		$m[$i][$j] = round($m[$i][$j]);
		$matrix->assign($i,$j,$m[$i][$j]);
	}
}

BEGIN_TEXT
\{mbox( 'Let: ', '\(A = \)' , display_matrix($matrix) )\}$BR
Find \(S\), \(D\) and \(S^{-1}\) such that \(A=SDS^{-1}\). Starting with the first row, put the eigenvalues from smallest to greatest.  $BR

The solution for S is not unique.  Suppose you've found some matrix T such that \(A=TDT^{-1}\).  We'll now find the matrix that Webwork desires.  Notice that we can multiply any COLUMN of T by a constant c and divide the ROW of \(T^{-1}\) by c at the same time and still have a solution to the problem.  $BR

Find the solution such that the first ROW of S has the entries $s11, $s12, $s13, $s14.  Be sure to save an attempt with which to get help if your answers don't seem to work!
\{mbox('\(S=\)',answer_matrix(4,4,4),'\(D=\)',answer_matrix(4,4,4),'\(S^{-1}=\)',answer_matrix(4,4,4))\}
END_TEXT


ANS num_cmp(ra_flatten_matrix($s));
ANS num_cmp(ra_flatten_matrix($e));
ANS num_cmp(ra_flatten_matrix($t));



ENDDOCUMENT();       # This should be the last executable line in the problem.